"""
Django settings for base project.

Generated by 'django-admin startproject' using Django 4.2.14.

For more information on this file, see:
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see:
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from decouple import config

##############################################
# 1. BASE DIRECTORY & PATH CONFIGURATION
##############################################
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

##############################################
# 2. SECURITY & DEBUG SETTINGS
##############################################
SECRET_KEY = config('SECRET_KEY')
DEBUG = True
DEBUG_CACHING = False

if DEBUG:
    BASE_URL = '127.0.0.1:8000'
    ALLOWED_HOSTS = ["*"]
    CORS_ALLOWED_ORIGINS = [
        "http://127.0.0.1:8000",
        "http://example.com",
    ]
    INTERNAL_IPS = [
        '127.0.0.1',
        "*"
    ]

# Uncomment these in production to enforce security
# SESSION_COOKIE_SECURE = False
# CSRF_COOKIE_SECURE = False
# SECURE_SSL_REDIRECT = False
# SECURE_SSL_HOST = False

LOGOUT_REDIRECT_URL = "/"

SITE_ID = 1

##############################################
# 3. APPLICATION DEFINITION
##############################################
INSTALLED_APPS = [
    # Base Project App
    "base", 

    # Third-Party Libraries
    'django_extensions',
    'widget_tweaks',
    'corsheaders',
    "compressor",
    'sass_processor',
    'htmlmin',
    'cachalot',

    # Django Defaults
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.sites",
    
    # Base Apps
    'website',
]

if DEBUG:
    INSTALLED_APPS.insert(0, 'debug_toolbar')
    INSTALLED_APPS.insert(-1, 'django_browser_reload')

##############################################
# 4. MIDDLEWARE CONFIGURATION
##############################################
MIDDLEWARE_REST = [
    # Security Middleware
    'django.middleware.security.SecurityMiddleware',

    # WhiteNoise Middleware for static files
    "whitenoise.middleware.WhiteNoiseMiddleware",

    # Session Management
    'django.contrib.sessions.middleware.SessionMiddleware',

    # Language Management Middleware
    'django.middleware.locale.LocaleMiddleware',

    # CORS Middleware
    'corsheaders.middleware.CorsMiddleware',

    # Authentication and CSRF Protection
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',

    # Messaging and Clickjacking Protection
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # HTML Minification Middleware (optional)
    # 'htmlmin.middleware.HtmlMinifyMiddleware',

    # Caching Middleware (order is important)
    'django.middleware.cache.FetchFromCacheMiddleware',
    # 'htmlmin.middleware.MarkRequestMiddleware',
]

if DEBUG:
    # Insert browser reload and debug middleware in development
    MIDDLEWARE_REST.insert(-2, "django_browser_reload.middleware.BrowserReloadMiddleware")
    MIDDLEWARE_REST.insert(-3, "debug_toolbar.middleware.DebugToolbarMiddleware")

# Select middleware ordering based on caching settings
if DEBUG and not DEBUG_CACHING:
    MIDDLEWARE = [
        'django.middleware.common.CommonMiddleware',  # Cache Disabled
    ] + MIDDLEWARE_REST
else:
    MIDDLEWARE = [
        'django.middleware.common.CommonMiddleware',
        'django.middleware.cache.UpdateCacheMiddleware',
    ] + MIDDLEWARE_REST

##############################################
# 5. URL & WSGI CONFIGURATION
##############################################
ROOT_URLCONF = 'base.urls'
WSGI_APPLICATION = 'base.wsgi.application'

##############################################
# 6. TEMPLATES CONFIGURATION
##############################################
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # Add global template directories here if needed
        'APP_DIRS': False,
        'OPTIONS': {
            'loaders': [
                ('django.template.loaders.cached.Loader', [
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                ]),
            ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

##############################################
# 7. DATABASE CONFIGURATION
##############################################
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': "db.sqlite3",
    }
}

##############################################
# 8. AUTHENTICATION & PASSWORD VALIDATION
##############################################
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGIN_URL = '/admin/login/'

##############################################
# 9. INTERNATIONALIZATION & TIMEZONE
##############################################
USE_I18N = True
USE_L10N = True
TIME_ZONE = 'UTC'
USE_TZ = True

LANGUAGES = [
    ('en', 'English'),
    ('ar', 'Arabic'),
]

LANGUAGE_CODE = 'en'

DEFAULT_LANGUAGE = LANGUAGE_CODE

##############################################
# 10. STATIC & MEDIA FILES CONFIGURATION
##############################################
STATIC_URL = '/static/'

# Additional static file directories (for development and shared assets)
STATICFILES_DIRS = [
    # Example: os.path.join(BASE_DIR, 'website', 'static'),
]

# Directory for collecting static files in production
STATIC_ROOT = os.path.join(BASE_DIR, 'production_static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# WhiteNoise & static files storage settings
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
# Alternatively, for compressed storage:
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Staticfiles finders for discovering static files
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'sass_processor.finders.CssFinder',
    'compressor.finders.CompressorFinder',
]

WHITENOISE_KEEP_ONLY_HASHED_FILES = True

##############################################
# 11. THIRD-PARTY APP CONFIGURATION
##############################################
# Django Compressor
# COMPRESS_ENABLED = not DEBUG

# SASS Processor
SASS_PROCESSOR_ROOT = os.path.join(BASE_DIR, 'static')
SASS_PROCESSOR_ENABLED = True

# HTML Minifier
EXCLUDE_FROM_MINIFYING = ('admin/', 'admin/*')
HTML_MINIFY = not DEBUG
KEEP_COMMENTS_ON_MINIFYING = not DEBUG

COMPRESS_PRECOMPILERS = (
    ('text/x-scss', 'django_libsass.SassCompiler'),
)

##############################################
# 12. DEFAULT PRIMARY KEY FIELD TYPE
##############################################
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

##############################################
# 13. LOGGING CONFIGURATION
##############################################
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'django_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'log/django.log',
            'formatter': 'verbose',
        },
        'custom_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'log/debug.log',
            'formatter': 'simple',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['django_file'],
            'level': 'INFO',
            'propagate': False,
        },
        'debug_logger': {
            'handlers': ['custom_file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

if DEBUG:
    # Use console logging in debug mode
    for logger_name in LOGGING['loggers']:
        LOGGING['loggers'][logger_name]['handlers'] = ['console']

##############################################
# 14. CACHING CONFIGURATION
##############################################
CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 60 * 60 * 24 * 30
CACHE_MIDDLEWARE_KEY_PREFIX = ''

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache'),
        'TIMEOUT': CACHE_MIDDLEWARE_SECONDS,
    }
}

############################################################################################
########################## WEBSITE SPECIFIC SETTINGS & CONFIGURATION #######################
############################################################################################

##############################################
# Enviorment Confiuration
##############################################
if not DEBUG:
    BASE_URL = 'example.com'
    ALLOWED_HOSTS = ["*"]
    CORS_ALLOWED_ORIGINS = [
        "http://127.0.0.1:8000",
        "https://example.com",
    ]
    INTERNAL_IPS = [
        '127.0.0.1',
    ]


##############################################
# Email Configuration Settings
##############################################   
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = config("EMAIL_HOST")
# EMAIL_PORT = 465
# EMAIL_USE_TLS = False
# EMAIL_USE_SSL = True
# EMAIL_HOST_USER = config("EMAIL_HOST_USER")
# EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD")


##############################################
# Website App Configuration
############################################## 
STATICFILES_DIRS += (os.path.join(BASE_DIR, 'website', 'static'),)

if DEBUG:
    WEBSITE_MEDIA_ROOT = os.path.join(BASE_DIR, 'website/static/website/img')
else:
    WEBSITE_MEDIA_ROOT = os.path.join(BASE_DIR, 'production_static/website/img')
